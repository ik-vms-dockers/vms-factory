# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"
# CPU and RAM can be adjusted depending on your system
CPUCOUNT = "2"
RAM = "4096"

require 'yaml'
currentDir = File.dirname(File.expand_path(__FILE__))

if File.file?('config.yaml') then
  settings = YAML.load_file('config.yaml')
else
  raise "Configuration file 'config.yaml' does not exist."
end

$non_priviledged = <<SCRIPT
#!/bin/sh
set -e
curl -sSL# ${BASE_URL}/${VERSION}/config/.gitconfig -o ~/.gitconfig
curl -sSL# ${BASE_URL}/${VERSION}/config/.vimrc -o ~/.vimrc
curl -sSL# ${BASE_URL}/${VERSION}/config/.tmux.conf -o ~/.tmux.conf
curl -sSL# ${BASE_URL}/${VERSION}/config/.tmux.conf.local -o ~/.tmux.conf.local
SCRIPT

$versions = <<SCRIPT
/usr/bin/lsb_release -a
ansible --version
aws --version
jq --version
yq --version
python --version
kubectl version --client
echo "helm > $(helm version)"
echo "aws-vault > $(aws-vault --version)"
echo "direnv > $(direnv version)"
SCRIPT

if ARGV.include?("up") || ARGV.include?("provision") || ARGV.include?("--provision")
  puts "bringing up vm(s) ..."
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = settings["box"]["name"]
  config.vm.box_version = settings["box"]["version"]

  if !Vagrant.has_plugin?('vagrant-vbguest') then
    config.vagrant.plugins = ["vagrant-reload"]
  end

  %w(.Brewfile).each do |f|
    local = File.expand_path "#{f}"
    if File.exist? local
      config.vm.provision "file", source: local, destination: f
    end
  end

  config.vm.provision "bootstrap", type: "shell",
    path: "#{settings["setup-env"]["BASE_URL"]}/#{settings["setup-env"]["VERSION"]}/ubuntu/001.install.sh",
    privileged: true, name: "bootstrap",
    env: settings["setup-env"]

  config.vm.provision "static-files", type: "shell", inline: $non_priviledged,
    privileged: false, name: "static-files",
    env: settings["setup-env"]

  config.vm.provision "linux-brew", type: "shell",
    path: "#{settings["setup-env"]["BASE_URL"]}/#{settings["setup-env"]["VERSION"]}/ubuntu/001.brew.sh",
    privileged: false, name: "linux-brew",
    env: settings["setup-env"]

  config.vm.provision "version", type: "shell", inline: $versions, privileged: false

  # config.vm.provision :reload

  config.trigger.after :up, :provision do |t|
    t.info = "versions"
    t.run_remote = { :inline => $versions }
  end

  config.vm.provider :virtualbox do |v, override|
    v.memory = "#{RAM}"
    v.cpus = "#{CPUCOUNT}"
  end

  config.vm.post_up_message="Setup complete `vagrant ssh` to ssh into the box"

end
